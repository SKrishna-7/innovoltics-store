// 'use client';

// import { useState, useEffect } from 'react';
// import { StarIcon } from '@heroicons/react/20/solid';
// import { useParams, useRouter } from 'next/navigation';
// import Link from 'next/link';
// import Image from 'next/image';
// import STLViewer from '@/Components/HomeModel';
// import { Radio, RadioGroup } from '@headlessui/react'
// function classNames(...classes) {
//   return classes.filter(Boolean).join(' ');
// }
// const dummyProducts = [
//   {
//     id: '1',
//     name: '3D Printed Dragon Figurine',
//     price: '₹29.99',
//     description: 'A fierce, detailed dragon crafted with precision 3D printing technology. Perfect for collectors or as a unique gift.',
//     images: [
//       { src: '/images/DF.png', alt: '3D Printed Dragon Main View' },
//       { src: '/images/DF.png', alt: '3D Printed Dragon Side View' },
//       { src: '/images/DF.png', alt: '3D Printed Dragon Angle View' },
//       { src: '/images/DF.png', alt: '3D Printed Dragon Featured View' },
//     ],
//     colors: [
//       { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' },
//       { name: 'Gray', class: 'bg-gray-200', selectedClass: 'ring-gray-400' },
//       { name: 'Black', class: 'bg-black', selectedClass: 'ring-gray-900' },
//       { name: 'Red', class: 'bg-red-500', selectedClass: 'ring-gray-900' },
//       { name: 'Violet', class: 'bg-purple-900', selectedClass: 'ring-gray-900' },
//       { name: 'Green', class: 'bg-green-900', selectedClass: 'ring-gray-900' },
//     ],
//     sizes: [
//       { name: 'Small', inStock: true },
//       { name: 'Medium', inStock: true },
//       { name: 'Large', inStock: true },
//       { name: 'Custom', inStock: false },
//     ],
//     highlights: ['Custom-made', 'Durable PLA material', 'Fast shipping'],
//   },
//   {
//     id: '2',
//     name: '3D Printed Keychain',
//     price: '₹9.99',
//     description: 'A sturdy, personalized keychain printed to order. Add a touch of style to your keys!',
//     images: [
//       { src: 'https://via.placeholder.com/600x400?text=Keychain+Main', alt: '3D Printed Keychain Main View' },
//       { src: 'https://via.placeholder.com/300x200?text=Keychain+Side', alt: '3D Printed Keychain Side View' },
//       { src: 'https://via.placeholder.com/300x200?text=Keychain+Angle', alt: '3D Printed Keychain Angle View' },
//       { src: 'https://via.placeholder.com/600x400?text=Keychain+Featured', alt: '3D Printed Keychain Featured View' },
//     ],
//     colors: [
//       { name: 'Red', class: 'bg-red-500', selectedClass: 'ring-red-500' },
//       { name: 'Blue', class: 'bg-blue-500', selectedClass: 'ring-blue-500' },
//       { name: 'Green', class: 'bg-green-500', selectedClass: 'ring-green-500' },
//     ],
//     sizes: [
//        { name: 'XXS', inStock: false },
//       { name: 'XS', inStock: true },
//       { name: 'S', inStock: true },
//       { name: 'M', inStock: true },
//       { name: 'L', inStock: true },
//     ],
//     highlights: ['Lightweight', 'Customizable design', 'Quick production'],
//   },
// ];

// const relatedProducts = [
//   {
//     id: 2,
//     name: '3D Printed Pulley',
//     price: '₹30',
//     image: '/images/DF.png',
//   },
//   {
//     id: 3,
//     name: 'Robotic Arm Gear Set',
//     price: '₹55',
//     image: '/images/DF.png',
//   },
//   {
//     id: 4,
//     name: 'Custom 3D Printed Sprocket',
//     price: '₹40',
//     image: '/images/DF.png',
//   },
// ]
// export default function ProductPage() {
  // const router = useRouter();
  // const { id } = useParams();

  // // Initialize state
  // var min = 6, max = 85 ,step=1;
  // const [product, setProduct] = useState(null);
  // const [selectedColor, setSelectedColor] = useState(null);
  // const [size, setSize] = useState(min);
  // const [selectedSize, setSelectedSize] = useState(dummyProducts.sizes[1])

//   const reviews = { href: '#', average: 4, totalCount: 25 };
//   useEffect(() => {
//     const foundProduct = dummyProducts.find((p) => p.id === id) || dummyProducts[0];

//     if (foundProduct) {
//       setProduct(foundProduct);
//       setSelectedColor(foundProduct.colors[0]); // Set first color
//     } else {
//       router.push("/products");
//     }
//   }, [id, router]);

//   if (!product) return <p className="text-center text-gray-500">Loading product details...</p>;
//   console.log(selectedColor.name)
//   return (
//     <div className="bg-white font-poppins">
//       <div className="pt-6">
//         {/* Breadcrumbs */}
//         <nav aria-label="Breadcrumb">
//           <ol className="flex max-w-3xl items-center space-x-2 px-4 sm:px-6 lg:max-w-4xl lg:px-8" >
//             <li>
//               <a href="/products" className="mr-2 text-sm font-medium text-gray-900">
//                 Products
//               </a>
//               /
//             </li>
//             <li className="text-sm my-2">
//               <span className="font-medium text-gray-500">{product.name}</span>
//             </li>
//           </ol>
//         </nav>

//         {/* Image Gallery */}
//         {/* <div className="mx-auto mt-6 max-w-2xl sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8">
//           <img
//             src={product.images[0].src}
//             alt={product.images[0].alt}
//             className="hidden size-full rounded-lg object-cover lg:block"
//           />
//           <div className="hidden lg:grid lg:grid-cols-1 lg:gap-y-8">
//             <img
//               src={product.images[1].src}
//               alt={product.images[1].alt}
//               className="aspect-3/2 w-full rounded-lg object-cover"
//             />
//             <img
//               src={product.images[2].src}
//               alt={product.images[2].alt}
//               className="aspect-3/2 w-full rounded-lg object-cover"
//             />
//           </div>
//           <img
//             src={product.images[3].src}
//             alt={product.images[3].alt}
//             className="aspect-4/5 size-full object-cover sm:rounded-lg lg:aspect-auto"
//           />
//         </div> */}

//   <div className="mx-auto mt-6 sm:px-6 lg:block lg:w-full lg:gap-x-8 lg:px-8 h-[400px]">
//           <STLViewer colors={selectedColor.name}/>
// </div>
//         {/* Product Info */}
//         <div className="mx-auto max-w-2xl px-4 pt-10 pb-16 sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:px-8 lg:pt-16 lg:pb-24">
//           <div className="lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8">
//             <h1 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">{product.name}</h1>
//           </div>

//           {/* Options */}
//           <div className="mt-4 lg:row-span-3 lg:mt-0">
//             <p className="text-3xl tracking-tight text-gray-900">{product.price}</p>

//             {/* Reviews */}
//             {/* <div className="mt-6">
//               <div className="flex items-center">
//                 {[0, 1, 2, 3, 4].map((rating) => (
//                   <StarIcon
//                     key={rating}
//                     className={classNames(
//                       reviews.average > rating ? 'text-gray-900' : 'text-gray-200',
//                       'size-5 shrink-0'
//                     )}
//                   />
//                 ))}
//                 <a href={reviews.href} className="ml-3 text-sm font-medium text-indigo-600 hover:text-indigo-500">
//                   {reviews.totalCount} reviews
//                 </a>
//               </div>
//             </div> */}

//             <form className="mt-10" onSubmit={(e) => e.preventDefault()}>
//               {/* Colors */}
//               <div>
//                 <h3 className="text-sm font-medium text-gray-900">Available Colors</h3>
//                 <div className="mt-4 flex items-center gap-x-3">
//                   {product.colors.map((color) => (
//                     <label key={color.name} className="relative -m-0.5 flex cursor-pointer items-center justify-center">
//                       <input
//                         type="radio"
//                         name="color"
//                         value={color.name}
//                         checked={selectedColor?.name === color.name}
//                         onChange={() => setSelectedColor(color)}
//                         className="sr-only"
//                       />
//                       <span
//                         className={classNames(
//                           color.class,
//                           selectedColor?.name === color.name ? color.selectedClass : 'ring-transparent',
//                           'size-8 rounded-full border border-black/10 ring-2 ring-offset-1'
//                         )}
//                       />
//                     </label>
//                   ))}
//                 </div>
//               </div>
//               <fieldset aria-label="Choose a size" className="mt-4">
//                   <RadioGroup
//                     value={selectedSize}
//                     onChange={setSelectedSize}
//                     className="grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4"
//                   >
//                     {dummyProducts.sizes.map((size) => (
//                       <Radio
//                         key={size.name}
//                         value={size}
//                         disabled={!size.inStock}
//                         className={classNames(
//                           size.inStock
//                             ? 'cursor-pointer bg-white text-gray-900 shadow-xs'
//                             : 'cursor-not-allowed bg-gray-50 text-gray-200',
//                           'group relative flex items-center justify-center rounded-md border px-4 py-3 text-sm font-medium uppercase hover:bg-gray-50 focus:outline-hidden data-focus:ring-2 data-focus:ring-indigo-500 sm:flex-1 sm:py-6',
//                         )}
//                       >
//                         <span>{size.name}</span>
//                         {size.inStock ? (
//                           <span
//                             aria-hidden="true"
//                             className="pointer-events-none absolute -inset-px rounded-md border-2 border-transparent group-data-checked:border-indigo-500 group-data-focus:border"
//                           />
//                         ) : (
//                           <span
//                             aria-hidden="true"
//                             className="pointer-events-none absolute -inset-px rounded-md border-2 border-gray-200"
//                           >
//                             <svg
//                               stroke="currentColor"
//                               viewBox="0 0 100 100"
//                               preserveAspectRatio="none"
//                               className="absolute inset-0 size-full stroke-2 text-gray-200"
//                             >
//                               <line x1={0} x2={100} y1={100} y2={0} vectorEffect="non-scaling-stroke" />
//                             </svg>
//                           </span>
//                         )}
//                       </Radio>
//                     ))}
//                   </RadioGroup>
//                 </fieldset>
//               {/* Sizes */}
//               <div className="mt-10">
//                 <div className="flex items-center justify-between">
//                   <h3 className="text-sm font-medium text-gray-900">Size</h3>
//                   <p href="#" className="text-sm font-medium text-indigo-600 ">
//                     {size} Diameter
//                   </p>
//                 </div>

//                 <input
//                   id="size-range"
//                   type="range"
//                   min={min}
//                   max={max}
//                   step={step}
//                   value={size}
//                   onChange={(e) => setSize(e.target.value)}
//                   className="w-full h-2 bg-gray-300 rounded-lg appearance-none cursor-pointer accent-blue-600"
//                 />
//                 <div className="flex justify-between w-full text-sm text-gray-500 mt-2">
//                   <span>{min}</span>
//                   <span>{max}</span>
//                 </div>
//               </div>

//               <button
//                 type="submit"
//                 className="mt-10 flex w-full items-center justify-center rounded-md  bg-purple-600 px-8 py-3
//                  text-base font-medium text-white hover:bg-purple-700 
//                   outline-none"
//               >
//                 Add to Cart
//               </button>
//             </form>
//           </div>

//           {/* Description and Details */}
//           <div className="py-10 lg:col-span-2 lg:col-start-1 lg:border-r lg:border-gray-200 lg:pt-6 lg:pr-8 lg:pb-16">
//             <div className="space-y-6">
//               <p className="text-base text-gray-900">{product.description}</p>
//             </div>
//             <div className="mt-10"> 
//               <h3 className="text-sm font-medium text-gray-900">Highlights</h3>
//               <ul className="mt-4 list-disc space-y-2 pl-4 text-sm">
//                 {product.highlights.map((highlight) => (
//                   <li key={highlight} className="text-gray-400">
//                     <span className="text-gray-600">{highlight}</span>
//                   </li>
//                 ))}
//               </ul>
//             </div>
//             <div className="mt-4">
//               <h3 className="text-sm font-medium text-gray-900">Details</h3>

//               <p className='py-5 text-sm'>{product.description}</p>
//             </div>
//           </div>
//         </div>

      
//       <div className="mt-5 px-10">
//       <h2 className="text-lg font-semibold text-gray-900">Related Products</h2>
//       <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mt-4">
//         {relatedProducts.map((product) => (
//           <Link key={product.id} href={`/products/₹{product.id}`} className="block border rounded-lg p-4 shadow-sm hover:shadow-md">
//             <Image src={product.image} alt={product.name} className="w-full h-50 object-cover rounded-md" 
//             width={300} height={300}
//              />
//             <h3 className="mt-2 text-sm font-medium text-gray-900">{product.name}</h3>
//             <p className="text-sm text-gray-600">{product.price}</p>
//           </Link>
//         ))}
//       </div>
//     </div>
//       </div>
//     </div>
//   );
// }

'use client';

// pages/product/[id].jsx
import { useState } from 'react';
import { useRouter } from 'next/navigation';
import STLViewer from '@/Components/HomeModel';
import { useCart } from '@/Components/CartContext';

const ProductPage = () => {
  const router = useRouter();
  // Sample product data (in real app, this would come from an API)
  const product = {
    id: '1',
    name: '3D Printed Dragon Figurine',
    price: '₹29.99',
    breadcrumbs: [
      { id: 1, name: 'Home', href: '/' },
      { id: 2, name: 'Category', href: '/category' },
    ],
    images: [
            { src: '/images/DF.png', alt: '3D Printed Dragon Main View' },
            { src: '/images/DF.png', alt: '3D Printed Dragon Side View' },
            { src: '/images/DF.png', alt: '3D Printed Dragon Angle View' },
            { src: '/images/DF.png', alt: '3D Printed Dragon Featured View' },
          ],
          colors: [
                  { name: 'White', class: 'bg-white', selectedClass: 'ring-gray-400' },
                  { name: 'Gray', class: 'bg-gray-200', selectedClass: 'ring-gray-400' },
                  { name: 'Black', class: 'bg-black', selectedClass: 'ring-gray-900' },
                  { name: 'Red', class: 'bg-red-500', selectedClass: 'ring-gray-900' },
                  { name: 'Violet', class: 'bg-purple-900', selectedClass: 'ring-gray-900' },
                  { name: 'Green', class: 'bg-green-900', selectedClass: 'ring-gray-900' },
                ],
    materials: [
      { name: 'PLA', inStock: true },
      { name: 'PETG', inStock: true },
      { name: 'ABS', inStock: false },
      { name: 'TPU', inStock: true }, 
    ],
    description: 'A fierce, detailed dragon crafted with precision 3D printing technology. Perfect for collectors or as a unique gift',
    highlights: ['Custom-made', 'Durable PLA material', 'Fast shipping'],
    details: 'Detailed information about the product.',
    model:[
      { name: 'Frame',mod:'/models/drone_frame.stl', inStock: true },
      { name: 'Body',mod:'/models/3.stl', inStock: true },
      { name: 'Frame1',mod:'/models/drone_frame.stl', inStock: false },
    ]
  };

  const [selectedColor, setSelectedColor] = useState(product.colors[0]);
  const [selectMaterial, setMaterial] = useState('');
  const [cartMessage, setCartMessage] = useState('');
  const [model,setModel]=useState('');
  const [modelName,setModelName]=useState();
  const [cartItems,setCartItems]=useState()
  const {addToCart,cart} = useCart()
  
  const [isModalOpen, setIsModalOpen] = useState(false); // State for modal

  
  const handleAddToCart = (e) => {
    e.preventDefault();
    if (modelName==='') {
      setCartMessage('Please select a Model');
      return;
    }else if(selectMaterial==''){
      setCartMessage('Please select the size');
    }
    setCartMessage(`Added ${product.name} (${selectMaterial.name}, ${selectedColor.name}) ${model.name}to cart!`);

    const CartItems={
      'id':product.id,
      'name':product.name,
      'material':selectMaterial.name,
      'color':selectedColor.name,
      'category':model.name,
      'price':product.price
    }
    addToCart(CartItems)
  };
    setTimeout(() => setCartMessage(''), 3000);


  
console.log(cart)
  return (
    <div className="bg-white">
      <div className="pt-6">
        {/* Breadcrumb */}
        <nav aria-label="Breadcrumb">
          <ol className="mx-auto flex max-w-2xl items-center space-x-2 px-4 sm:px-6 lg:max-w-7xl lg:px-8">
            {product.breadcrumbs.map((breadcrumb) => (
              <li key={breadcrumb.id} className="flex items-center">
                <a href={breadcrumb.href} className="mr-2 text-sm font-medium text-gray-900">
                  {breadcrumb.name}
                </a>
                <svg
                  fill="currentColor"
                  width={16}
                  height={20}
                  viewBox="0 0 16 20"
                  className="h-5 w-4 text-gray-300"
                >
                  <path d="M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z" />
                </svg>
              </li>
            ))}
            <li className="text-sm">
              <a href={product.href} className="font-medium text-gray-500 hover:text-gray-600">
                {product.name}
              </a>
            </li>
          </ol>
        </nav>

        {/* Image Gallery */}
        <div className="mx-auto mt-6 sm:px-6 lg:block lg:w-full lg:gap-x-8 lg:px-8 h-[400px]">
         <STLViewer colors={selectedColor.name} model={modelName}/>
 </div>

        {/* Product Info */}
        <div className="mx-auto max-w-2xl px-4 pt-10 pb-16 sm:px-6 lg:grid lg:max-w-7xl lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8 lg:px-8 lg:pt-16 lg:pb-24">
          <div className="lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8">
            <h1 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">
              {product.name}
            </h1>
          </div>

          {/* Options */}
          <div className="mt-4 lg:row-span-3 lg:mt-0">
            <p className="text-3xl tracking-tight text-gray-900">{product.price}</p>

            <form className="mt-10" onSubmit={handleAddToCart}>
              {/* Colors */}
              <div>
                <h3 className="text-sm font-medium text-gray-900">Color</h3>
                <div className="mt-4 flex items-center gap-x-3">
                  {product.colors.map((color) => (
                    <button
                      key={color.name}
                      type="button"
                      onClick={() => setSelectedColor(color)}
                      className={`relative -m-0.5 flex cursor-pointer items-center justify-center rounded-full p-0.5 focus:outline-none ${
                        selectedColor.name === color.name
                          ? `${color.selectedClass} ring-2 ring-offset-1`
                          : ''
                      }`}
                    >
                      <span
                        className={`${color.class} h-8 w-8 rounded-full border border-black border-opacity-10`}
                      />
                    </button>
                  ))}
                </div>
              </div>

              {/* Sizes */}
              <div className="mt-10">
                <div className="flex items-center justify-between">
                  <h3 className="text-sm font-medium text-gray-900">Materials</h3>
                  <a href="#" className="text-sm font-medium text-purple-600 hover:text-indigo-500">
                    
                  </a>
                </div>
                <div className="mt-4 w-max h-full items-center justify-center grid grid-cols-4 gap-6 sm:grid-cols-8 lg:grid-cols-4">
                  {product.materials.map((material) => (
                    <div
                      key={material.name}
                      type="button"
                      disabled={!material.inStock}
                      onClick={() => material.inStock && setMaterial(material)}
                      className={`group relative  w-[50px] h-[15px] sm:flex-1 sm:py-6 flex items-center justify-center
                        border-2  rounded-md ${
                        material.inStock
                          ? 'cursor-pointer bg-white text-gray-900 shadow-sm'
                          : 'cursor-not-allowed bg-gray-50 text-gray-200'
                      } ${
                        selectMaterial?.name === material.name && material.inStock
                          ? 'border-purple-600'
                          : 'border-gray-100'
                      }`}
                    >
                      <span>{material.name}</span>
                      {!material.inStock && (
                        <span className="absolute inset-0 rounded-md border-2 border-gray-200">
                          <svg
                            stroke="currentColor"
                            viewBox="0 0 100 100"
                            className="absolute inset-0 h-full w-full stroke-2 text-gray-200"
                          >
                            <line x1={0} x2={100} y1={100} y2={0} />
                          </svg>
                        </span>
                      )}
                    </div>
                  ))}
                </div>
              </div>

              <div className="mt-10">
                <div className="flex items-center justify-between">
                  <h3 className="text-sm font-medium text-gray-900">Category</h3>
                 
                </div>
                <div className="mt-4 grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4">
                  {product.model.map((m) => (
                     <div
                     key={m.name}
                     type="button"
                     disabled={!m.inStock}
                     onClick={() => {
                      if (m.inStock) {
                        setModel(m);
                        setModelName(m.mod);
                      }
                    }}
                     className={`group relative  w-max px-3 h-[15px] sm:flex-1 sm:py-6 flex items-center justify-center
                       border-2  rounded-md ${
                       m.inStock
                         ? 'cursor-pointer bg-white text-gray-900 shadow-sm'
                         : 'cursor-not-allowed bg-gray-50 text-gray-200'
                     } ${
                       model?.name === m.name && m.inStock
                         ? 'border-purple-600'
                         : 'border-gray-100'
                     }`}
                   >
                     <span>{m.name}</span>
                     {!m.inStock && (
                       <span className="absolute inset-0 rounded-md border-2 border-gray-200">
                         <svg
                           stroke="currentColor"
                           viewBox="0 0 100 100"
                           className="absolute inset-0 h-full w-full stroke-2 text-gray-200"
                         >
                           <line x1={0} x2={100} y1={100} y2={0} />
                         </svg>
                       </span>
                     )}
                   </div>
                  ))}
                </div>
              </div>

              <button
                type="submit"
                className="mt-10 flex w-full items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
              >
                Add to bag
              </button>
            </form>
            {cartMessage && (
              <p className="mt-4 text-center text-sm text-gray-600">{cartMessage}</p>
            )}
          </div>

          {/* Description and Details */}
          <div className="py-10 lg:col-span-2 lg:col-start-1 lg:border-r lg:border-gray-200 lg:pt-6 lg:pr-8 lg:pb-16">
            <div className="space-y-6">
              <p className="text-base text-gray-900">{product.description}</p>
            </div>

            <div className="mt-10">
              <h3 className="text-sm font-medium text-gray-900">Highlights</h3>
              <ul className="mt-4 list-disc space-y-2 pl-4 text-sm">
                {product.highlights.map((highlight) => (
                  <li key={highlight} className="text-gray-400">
                    <span className="text-gray-600">{highlight}</span>
                  </li>
                ))}
              </ul>
            </div>

            <div className="mt-10">
              <h2 className="text-sm font-medium text-gray-900">Details</h2>
              <div className="mt-4 space-y-6">
                <p className="text-sm text-gray-600">{product.details}</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductPage;





  <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4 shadow-lg">
            <div className="flex items-center justify-between">
              <h2 className="text-xl font-semibold text-gray-900">Item Added to Cart!</h2>
              <button
                onClick={() => setIsModalOpen(false)}
                className="text-gray-500 hover:text-gray-700"
              >
                <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
            <div className="mt-4 text-center">
              <svg
                className="mx-auto h-12 w-12 text-green-500"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
              </svg>
              <p className="mt-2 text-sm text-gray-600">
                <span className="font-medium">{file?.name}</span> has been successfully added to your cart!
              </p>
              <div className="mt-6 flex justify-center space-x-4">
                <button
                  onClick={() => setIsModalOpen(false)}
                  className="px-6 py-2 bg-indigo-600 text-white font-medium rounded-md hover:bg-indigo-700 transition-colors"
                >
                  Continue Uploading
                </button>
                <Link
                  href="/checkout"
                  className="px-6 py-2 bg-gray-200 text-gray-700 font-medium rounded-md hover:bg-gray-300 transition-colors"
                >
                  View Cart
                </Link>
              </div>
            </div>
          </div>
        </div>